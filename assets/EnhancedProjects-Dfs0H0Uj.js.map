{"version":3,"mappings":";qIAIA,MAAMA,EAAkC,CAAC,CAAE,KAAAC,EAAO,SAAU,KAAAC,EAAO,gBAE9DC,EAAA,YAAI,UAAW,qBAAqBF,CAAI,GACvC,UAACE,OAAA,OAAI,UAAU,kBACb,UAACC,MAAA,OAAI,UAAU,cAAe,GAC9BA,MAAC,MAAI,WAAU,cAAe,GAC9BA,MAAC,MAAI,WAAU,cAAe,GAC9BA,MAAC,MAAI,WAAU,cAAe,IAChC,EACCF,GAAQE,EAAA,IAAC,IAAE,WAAU,eAAgB,SAAKF,CAAA,IAC7C,ECPEG,EAAsBC,EAAM,KAAK,IAAMC,EAAA,WAAO,mCAAuB,2BAAC,EAEtEC,EAA6B,IAAM,CACvC,KAAM,CAACC,EAAaC,CAAc,EAAIC,WAAS,EAAE,EAC3C,CAACC,EAAkBC,CAAmB,EAAIF,WAAiB,KAAK,EAChE,CAACG,EAAgBC,CAAiB,EAAIJ,WAAiB,KAAK,EAC5D,CAACK,EAAQC,CAAS,EAAIN,WAA6C,UAAU,EAC7E,CAACO,EAAUC,CAAW,EAAIR,WAA0B,MAAM,EAE1DS,EAAsB,CAC1B,CACE,GAAI,EACJ,MAAO,sCACP,YAAa,yGACb,gBAAiB,6SACjB,aAAc,CAAC,eAAgB,WAAY,mBAAoB,SAAU,UAAW,SAAS,EAC7F,MAAO,4BACP,KAAM,0CACN,OAAQ,oCACR,KAAM,CAAC,SAAU,YAAa,YAAa,aAAa,EACxD,SAAU,YACV,OAAQ,YACR,SAAU,SACV,SAAU,EACV,OAAQ,gFACR,WAAY,CAAC,8BAA+B,gCAAiC,8BAA8B,EAC3G,UAAW,CAAC,oCAAqC,iCAAkC,4CAA4C,EAC/H,UAAW,CAAC,0BAA2B,0BAA2B,sCAAsC,EACxG,SAAU,GACV,eAAgB,UAChB,OAAQ,CAAC,qBAAsB,oBAAqB,qBAAsB,iBAAiB,CAC7F,EACA,CACE,GAAI,EACJ,MAAO,4CACP,YAAa,yFACb,gBAAiB,6SACjB,aAAc,CAAC,SAAU,SAAU,eAAgB,aAAc,UAAW,sBAAsB,EAClG,MAAO,4BACP,OAAQ,uCACR,KAAM,CAAC,eAAgB,mBAAoB,YAAa,eAAe,EACvE,SAAU,YACV,OAAQ,YACR,SAAU,SACV,SAAU,EACV,OAAQ,gFACR,WAAY,CAAC,2BAA4B,mCAAoC,2BAA2B,EACxG,UAAW,CAAC,uCAAwC,oCAAqC,wCAAwC,EACjI,UAAW,CAAC,6BAA8B,kBAAmB,0BAA0B,EACvF,SAAU,GACV,eAAgB,UAChB,OAAQ,CAAC,eAAgB,mBAAoB,kBAAmB,sBAAsB,CACxF,EACA,CACE,GAAI,EACJ,MAAO,iCACP,YAAa,6FACb,gBAAiB,yQACjB,aAAc,CAAC,QAAS,WAAY,aAAc,cAAe,iBAAiB,EAClF,MAAO,4BACP,OAAQ,iDACR,SAAU,4CACV,KAAM,CAAC,MAAO,QAAS,WAAY,cAAc,EACjD,SAAU,YACV,OAAQ,YACR,SAAU,UACV,SAAU,EACV,OAAQ,gEACR,WAAY,CAAC,4BAA6B,sBAAuB,uBAAuB,EACxF,UAAW,CAAC,2CAA4C,gCAAiC,mCAAmC,EAC5H,UAAW,CAAC,uBAAwB,mBAAoB,wBAAwB,EAChF,SAAU,GACV,eAAgB,UAChB,OAAQ,CAAC,yBAA0B,kBAAmB,iBAAkB,WAAW,CACrF,EACA,CACE,GAAI,EACJ,MAAO,wBACP,YAAa,kFACb,gBAAiB,uPACjB,aAAc,CAAC,SAAU,UAAW,SAAU,OAAQ,cAAe,WAAW,EAChF,MAAO,2BACP,OAAQ,+CACR,KAAM,CAAC,MAAO,SAAU,WAAY,eAAe,EACnD,SAAU,YACV,OAAQ,YACR,SAAU,WACV,SAAU,EACV,OAAQ,0EACR,WAAY,CAAC,mCAAoC,0BAA2B,wBAAwB,EACpG,UAAW,CAAC,qCAAsC,8BAA+B,4BAA4B,EAC7G,UAAW,CAAC,gCAAiC,yBAA0B,6BAA6B,EACpG,SAAU,GACV,eAAgB,UAChB,OAAQ,CAAC,kBAAmB,qBAAsB,uBAAwB,sBAAsB,CAClG,EACA,CACE,GAAI,EACJ,MAAO,yBACP,YAAa,kFACb,gBAAiB,sPACjB,aAAc,CAAC,QAAS,aAAc,cAAe,QAAS,SAAS,EACvE,MAAO,kCACP,OAAQ,wDACR,KAAM,CAAC,MAAO,KAAM,MAAO,cAAc,EACzC,SAAU,YACV,OAAQ,YACR,SAAU,UACV,SAAU,EACV,OAAQ,yEACR,WAAY,CAAC,oBAAqB,4BAA6B,wBAAwB,EACvF,UAAW,CAAC,kCAAmC,mCAAoC,mCAAmC,EACtH,UAAW,CAAC,kBAAmB,uBAAwB,4BAA4B,EACnF,SAAU,GACV,eAAgB,UAChB,OAAQ,CAAC,kBAAmB,QAAS,kBAAmB,wBAAwB,CAClF,EACA,CACE,GAAI,EACJ,MAAO,qBACP,YAAa,8EACb,gBAAiB,iOACjB,aAAc,CAAC,OAAQ,QAAS,MAAO,cAAc,EACrD,MAAO,8BACP,OAAQ,gDACR,KAAM,CAAC,OAAQ,OAAQ,UAAW,SAAS,EAC3C,SAAU,YACV,OAAQ,YACR,SAAU,UACV,SAAU,EACV,OAAQ,8EACR,WAAY,CAAC,iCAAkC,0BAA2B,0BAA0B,EACpG,UAAW,CAAC,4CAA6C,sCAAuC,mCAAmC,EACnI,UAAW,CAAC,gCAAiC,yBAA0B,0BAA0B,EACjG,SAAU,GACV,eAAgB,UAChB,OAAQ,CAAC,mBAAoB,8BAA+B,mBAAoB,0BAA0B,CAC5G,EACA,CACE,GAAI,EACJ,MAAO,wCACP,YAAa,qHACb,gBAAiB,qTACjB,aAAc,CAAC,QAAS,UAAW,SAAU,iBAAiB,EAC9D,MAAO,yBACP,SAAU,gCACV,KAAM,CAAC,MAAO,cAAe,OAAQ,aAAa,EAClD,SAAU,WACV,OAAQ,cACR,SAAU,YACV,SAAU,EACV,OAAQ,uGACR,WAAY,CAAC,6BAA8B,iCAAkC,mCAAmC,EAChH,UAAW,CAAC,6CAA8C,6CAA8C,2DAA2D,EACnK,UAAW,CAAC,4BAA6B,6BAA8B,qBAAqB,EAC5F,SAAU,GACV,eAAgB,UAChB,OAAQ,CAAC,yBAA0B,kBAAmB,eAAgB,UAAU,EAEpF,EAEMC,EAAa,CACjB,CAAE,GAAI,MAAO,MAAO,eAAgB,MAAOD,EAAS,MAAO,EAC3D,CAAE,GAAI,WAAY,MAAO,WAAY,MAAOA,EAAS,OAAYE,KAAE,WAAa,UAAU,EAAE,MAAO,EACnG,CAAE,GAAI,YAAa,MAAO,aAAc,MAAOF,EAAS,OAAYE,KAAE,WAAa,WAAW,EAAE,MAAO,EACvG,CAAE,GAAI,YAAa,MAAO,WAAY,MAAOF,EAAS,OAAYE,KAAE,WAAa,WAAW,EAAE,MAAO,CACvG,EAEMC,EAAgB,CACpB,CAAE,GAAI,MAAO,MAAO,YAAa,EACjC,CAAE,GAAI,YAAa,MAAO,WAAY,EACtC,CAAE,GAAI,cAAe,MAAO,aAAc,EAC1C,CAAE,GAAI,WAAY,MAAO,UAAW,CACtC,EAEMC,EAAmBC,UAAQ,IAAM,CACrC,IAAIC,EAAWN,EAGf,OAAIR,IAAqB,QACvBc,EAAWA,EAAS,OAAkBC,KAAQ,WAAaf,CAAgB,GAIzEE,IAAmB,QACrBY,EAAWA,EAAS,OAAkBC,KAAQ,SAAWb,CAAc,GAIrEL,IACFiB,EAAWA,EAAS,UAClBC,EAAQ,MAAM,YAAc,WAASlB,EAAY,aAAa,GAC9DkB,EAAQ,YAAY,YAAc,WAASlB,EAAY,aAAa,GACpEkB,EAAQ,aAAa,KAAaC,KAAK,cAAc,SAASnB,EAAY,YAAY,CAAC,CAAC,GACxFkB,EAAQ,KAAK,KAAKE,GAAOA,EAAI,cAAc,SAASpB,EAAY,aAAa,CAAC,CAChF,GAIOiB,EAAA,KAAK,CAACI,EAAGC,IAAM,CACtB,OAAQf,EAAQ,CACd,IAAK,WACH,OAAIc,EAAE,UAAY,CAACC,EAAE,SAAiB,GAClC,CAACD,EAAE,UAAYC,EAAE,SAAiB,EAC/B,IAAI,KAAKA,EAAE,cAAc,EAAE,UAAY,IAAI,KAAKD,EAAE,cAAc,EAAE,QAAQ,EACnF,IAAK,SACH,OAAO,IAAI,KAAKC,EAAE,cAAc,EAAE,UAAY,IAAI,KAAKD,EAAE,cAAc,EAAE,QAAQ,EACnF,IAAK,WAAY,CACT,MAAAE,EAAmBC,GACnBA,EAAS,SAAS,KAAK,EAAU,SAASA,CAAQ,EAClDA,EAAS,SAAS,MAAM,EAAU,SAASA,CAAQ,EAAI,EACpD,GAET,OAAOD,EAAgBD,EAAE,QAAQ,EAAIC,EAAgBF,EAAE,QAAQ,EAEjE,QACS,SACX,CACD,EAEMJ,GACN,CAACd,EAAkBE,EAAgBL,EAAaO,CAAM,CAAC,EAEpDkB,EAAQ,CACZ,MAAOd,EAAS,OAChB,SAAUA,EAAS,OAAYE,KAAE,QAAQ,EAAE,OAC3C,UAAWF,EAAS,UAAYE,EAAE,SAAW,WAAW,EAAE,OAC1D,aAAc,CAAC,GAAG,IAAI,IAAIF,EAAS,QAAQE,GAAKA,EAAE,YAAY,CAAC,CAAC,EAAE,MACpE,EAEA,cACG,OAAI,UAAU,8BAA8B,GAAG,mBAC9C,UAAAnB,EAAA,KAACgC,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,kBAEV,gBAAC,MAAG,UAAU,gBAAgB,SAAQ,mBACrC,KAAE,UAAU,mBAAmB,SAEhC,qFACF,EAEChC,OAAA,MAAI,WAAU,kCACb,UAACA,OAAA,OAAI,UAAU,oBACb,UAACC,MAAA,QAAK,SAAY,wBACjB,OAAI,UAAU,oBAAoB,cAAY,OAC7C,gBAAC,QAAK,UAAU,mBAAmB,SAAC,YACnC,QAAK,UAAU,mBAAmB,SAAC,YACnC,QAAK,UAAU,mBAAmB,SAAC,MACtC,IACF,EAECD,OAAA,MAAI,WAAU,gBACb,UAACA,OAAA,OAAI,UAAU,iBACb,UAACA,OAAA,OAAI,UAAU,YACb,UAAAC,EAAA,IAAC,OAAK,WAAU,cAAe,SAAA8B,EAAM,MAAM,QAC1C,QAAK,UAAU,aAAa,SAAQ,cACvC,EACC/B,OAAA,MAAI,WAAU,YACb,UAAAC,EAAA,IAAC,OAAK,WAAU,cAAe,SAAA8B,EAAM,SAAS,QAC7C,QAAK,UAAU,aAAa,SAAQ,cACvC,EACC/B,OAAA,MAAI,WAAU,YACb,UAAAC,EAAA,IAAC,OAAK,WAAU,cAAe,SAAA8B,EAAM,UAAU,QAC9C,QAAK,UAAU,aAAa,SAAS,eACxC,EACC/B,OAAA,MAAI,WAAU,YACb,UAACA,OAAA,QAAK,UAAU,cAAe,UAAM+B,EAAA,aAAa,KAAC,QAClD,QAAK,UAAU,aAAa,SAAY,iBAC3C,IACF,EAEC/B,OAAA,MAAI,WAAU,oBACjB,UAAAC,MAAC,OAAI,UAAU,iBACb,SAACD,EAAA,YAAI,UAAU,aACb,UAAAC,EAAA,IAAC,SACC,KAAK,OACL,YAAY,4CACZ,MAAOK,EACP,SAAW2B,GAAM1B,EAAe0B,EAAE,OAAO,KAAK,EAC9C,UAAU,eACZ,QACC,QAAK,UAAU,cAAc,SAAE,QAClC,EACF,EAECjC,OAAA,MAAI,WAAU,iBACb,UAACA,OAAA,OAAI,UAAU,eACb,gBAAC,SAAM,UAAU,eAAe,SAAS,oBACxC,MAAI,WAAU,iBACZ,SAAAkB,EAAW,IACVgB,GAAAlC,EAAA,KAAC,UAEC,UAAW,cAAcS,IAAqByB,EAAS,GAAK,SAAW,EAAE,GACzE,QAAS,IAAMxB,EAAoBwB,EAAS,EAAE,EAE7C,UAASA,EAAA,MAAM,KAAGA,EAAS,MAAM,MAJ7BA,EAAS,GAMjB,CACH,IACF,EAEClC,OAAA,MAAI,WAAU,eACb,gBAAC,SAAM,UAAU,eAAe,SAAO,YACvCC,EAAA,IAAC,UACC,MAAOU,EACP,SAAWsB,GAAMrB,EAAkBqB,EAAE,OAAO,KAAK,EACjD,UAAU,gBAET,SAAcb,EAAA,IACbe,SAAC,SAAuB,OAAOA,EAAO,GACnC,SAAOA,EAAA,KADG,EAAAA,EAAO,EAEpB,CACD,GACH,EACF,EAECnC,OAAA,MAAI,WAAU,eACb,gBAAC,SAAM,UAAU,eAAe,SAAQ,aACxCA,EAAA,KAAC,UACC,MAAOa,EACP,SAAWoB,GACTnB,EAAUmB,EAAE,OAAO,KAA2C,EAEhE,UAAU,gBAEV,gBAAC,UAAO,MAAM,WAAW,SAAc,yBACtC,UAAO,MAAM,SAAS,SAAY,uBAClC,UAAO,MAAM,WAAW,SAAQ,eACnC,EACF,EAECjC,OAAA,MAAI,WAAU,cACb,UAAAC,EAAA,IAAC,UACC,UAAW,YAAYc,IAAa,OAAS,SAAW,EAAE,GAC1D,QAAS,IAAMC,EAAY,MAAM,EACjC,aAAW,YACZ,aAED,EACAf,EAAA,IAAC,UACC,UAAW,YAAYc,IAAa,OAAS,SAAW,EAAE,GAC1D,QAAS,IAAMC,EAAY,MAAM,EACjC,aAAW,YACZ,cAED,CACF,GACF,IACF,EAEAf,EAAA,IAAC+B,EAAO,IAAP,CACC,UAAW,iBAAiBjB,CAAQ,GACpC,OAAM,GAEN,eAACqB,EAAA,CAAgB,KAAK,OACnB,WAAiB,IAAKZ,SACpBa,YAA0B,SAAWpC,MAAAJ,EAAQ,MAAK,SAAS,EAC1D,SAAAI,EAAA,IAACC,EAAA,CACC,QAAAsB,EACA,SAAAT,CAAA,IAHWS,EAAQ,EAKvB,CACD,CACH,GACF,EAECH,EAAiB,SAAW,GAC3BrB,EAAA,KAACgC,EAAO,IAAP,CACC,UAAU,aACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EAEtB,UAAC/B,MAAA,MAAG,SAAiB,sBACpBA,MAAA,KAAE,SAA6C,oDAClD,CAEA,GACF,IACF,CAEJ","names":["Loading","size","text","jsxs","jsx","EnhancedProjectCard","React","__vitePreload","EnhancedProjects","searchQuery","setSearchQuery","useState","selectedCategory","setSelectedCategory","selectedStatus","setSelectedStatus","sortBy","setSortBy","viewMode","setViewMode","projects","categories","p","statusOptions","filteredProjects","useMemo","filtered","project","tech","tag","a","b","getDurationDays","duration","stats","motion","e","category","status","AnimatePresence","Suspense"],"ignoreList":[],"sources":["../../src/components/Loading.tsx","../../src/components/EnhancedProjects.tsx"],"sourcesContent":["import React from 'react';\nimport { LoadingProps } from '../types';\nimport './Loading.css';\n\nconst Loading: React.FC<LoadingProps> = ({ size = 'medium', text = 'Loading...' }) => {\n  return (\n    <div className={`loading-container ${size}`}>\n      <div className=\"loading-spinner\">\n        <div className=\"spinner-ring\"></div>\n        <div className=\"spinner-ring\"></div>\n        <div className=\"spinner-ring\"></div>\n        <div className=\"spinner-ring\"></div>\n      </div>\n      {text && <p className=\"loading-text\">{text}</p>}\n    </div>\n  );\n};\n\nexport const SkeletonCard: React.FC = () => {\n  return (\n    <div className=\"skeleton-card\">\n      <div className=\"skeleton-image\"></div>\n      <div className=\"skeleton-content\">\n        <div className=\"skeleton-line skeleton-title\"></div>\n        <div className=\"skeleton-line skeleton-text\"></div>\n        <div className=\"skeleton-line skeleton-text short\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport const SkeletonText: React.FC<{ lines?: number }> = ({ lines = 3 }) => {\n  return (\n    <div className=\"skeleton-text-container\">\n      {Array.from({ length: lines }, (_, i) => (\n        <div key={i} className={`skeleton-line ${i === lines - 1 ? 'short' : ''}`}></div>\n      ))}\n    </div>\n  );\n};\n\nexport default Loading;","import React, { useState, useMemo, Suspense } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport './EnhancedProjects.css';\nimport { Project } from '../types';\nimport Loading from './Loading';\n\n// Lazy load project card for better performance\nconst EnhancedProjectCard = React.lazy(() => import('./EnhancedProjectCard'));\n\nconst EnhancedProjects: React.FC = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [selectedStatus, setSelectedStatus] = useState<string>('all');\n  const [sortBy, setSortBy] = useState<'newest' | 'featured' | 'duration'>('featured');\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n\n  const projects: Project[] = [\n    {\n      id: 1,\n      title: \"VigilWatch - Emergency Response App\",\n      description: \"Life-saving emergency response application with one-tap emergency calls and real-time location sharing\",\n      longDescription: \"VigilWatch is a comprehensive emergency response application built during HenHacks that can save lives by providing instant access to emergency services. The app features one-tap emergency calling, real-time GPS tracking, SMS alerts to trusted contacts, and a verified medical professional network.\",\n      technologies: [\"React Native\", \"Firebase\", \"Geolocation APIs\", \"Twilio\", \"Node.js\", \"MongoDB\"],\n      image: `${import.meta.env.BASE_URL}projects/virgilwatch.gif`,\n      demo: \"https://devpost.com/software/vigilwatch\",\n      github: \"https://github.com/vigilwatch/app\",\n      tags: [\"mobile\", \"emergency\", \"real-time\", \"geolocation\"],\n      category: \"hackathon\",\n      status: \"completed\",\n      duration: \"2 days\",\n      teamSize: 3,\n      impact: \"Potentially life-saving emergency response system with real-time capabilities\",\n      challenges: [\"Real-time location accuracy\", \"Emergency service integration\", \"Cross-platform compatibility\"],\n      solutions: [\"Implemented GPS fusion algorithms\", \"Created robust API connections\", \"Used React Native for universal deployment\"],\n      learnings: [\"Emergency system design\", \"Real-time data handling\", \"User experience in crisis situations\"],\n      featured: true,\n      completionDate: \"2025-02\",\n      skills: [\"Mobile Development\", \"Real-time Systems\", \"Emergency Services\", \"Team Leadership\"]\n    },\n    {\n      id: 2,\n      title: \"Data for Good - Education Equity Analysis\",\n      description: \"Machine learning analysis of educational disparities for National Education Equity Lab\",\n      longDescription: \"Led a team of 5 developers in analyzing large datasets to identify patterns in educational disparities and develop data-driven solutions for the National Education Equity Lab. Used advanced statistical modeling and machine learning to provide actionable insights for improving educational outcomes.\",\n      technologies: [\"Python\", \"Pandas\", \"Scikit-learn\", \"Matplotlib\", \"Jupyter\", \"Statistical Analysis\"],\n      image: `${import.meta.env.BASE_URL}projects/dataforgood.jpg`,\n      github: \"https://github.com/dfgtexas25/Team-1\",\n      tags: [\"data-science\", \"machine-learning\", \"education\", \"social-impact\"],\n      category: \"hackathon\",\n      status: \"completed\",\n      duration: \"2 days\",\n      teamSize: 7,\n      impact: \"Provided insights to improve educational outcomes for underserved communities\",\n      challenges: [\"Large dataset processing\", \"Statistical significance testing\", \"Stakeholder communication\"],\n      solutions: [\"Implemented efficient data pipelines\", \"Used advanced statistical methods\", \"Created clear visualization dashboards\"],\n      learnings: [\"Data science methodologies\", \"Team leadership\", \"Stakeholder presentation\"],\n      featured: true,\n      completionDate: \"2025-01\",\n      skills: [\"Data Science\", \"Machine Learning\", \"Team Leadership\", \"Statistical Analysis\"]\n    },\n    {\n      id: 3,\n      title: \"LinkLibrary - Resource Manager\",\n      description: \"Modern web application for organizing and managing web resources with secure cloud storage\",\n      longDescription: \"LinkLibrary revolutionizes how users organize their digital resources. Built with React and Firebase, it provides secure cloud storage, intelligent categorization, search functionality, and sharing capabilities for bookmarks, articles, and educational materials.\",\n      technologies: [\"React\", \"Firebase\", \"TypeScript\", \"Material-UI\", \"Cloud Firestore\"],\n      image: `${import.meta.env.BASE_URL}projects/linklibrary.gif`,\n      github: \"https://github.com/Jsackitey1/link-library.git\",\n      liveDemo: \"https://jsackitey1.github.io/link-library\",\n      tags: [\"web\", \"react\", \"firebase\", \"productivity\"],\n      category: \"secondary\",\n      status: \"completed\",\n      duration: \"3 weeks\",\n      teamSize: 1,\n      impact: \"Used by 10+ students for resource management and organization\",\n      challenges: [\"Real-time synchronization\", \"Search optimization\", \"Data structure design\"],\n      solutions: [\"Implemented Firebase real-time listeners\", \"Created indexed search system\", \"Designed scalable database schema\"],\n      learnings: [\"Firebase integration\", \"State management\", \"User experience design\"],\n      featured: false,\n      completionDate: \"2024-12\",\n      skills: [\"Full-Stack Development\", \"Database Design\", \"Cloud Services\", \"UX Design\"]\n    },\n    {\n      id: 4,\n      title: \"Bluetooth Robotic Arm\",\n      description: \"3D-printed Bluetooth-controlled robotic prosthesis with Android app integration\",\n      longDescription: \"An innovative 3D-printed robotic prosthesis controlled via Bluetooth through an Android application. Features precise motor control, sensory feedback, and intuitive gesture-based controls designed to assist individuals with mobility challenges.\",\n      technologies: [\"Python\", \"Arduino\", \"Kotlin\", \"Java\", \"3D Printing\", \"Bluetooth\"],\n      image: `${import.meta.env.BASE_URL}projects/bionic-arm.gif`,\n      github: \"https://github.com/Jsackitey1/Bionic-Arm.git\",\n      tags: [\"iot\", \"mobile\", \"hardware\", \"accessibility\"],\n      category: \"secondary\",\n      status: \"completed\",\n      duration: \"12 weeks\",\n      teamSize: 1,\n      impact: \"Assistive technology solution for individuals with mobility impairments\",\n      challenges: [\"Bluetooth connectivity stability\", \"Motor precision control\", \"3D printing tolerances\"],\n      solutions: [\"Implemented connection retry logic\", \"Used PID control algorithms\", \"Optimized 3D model designs\"],\n      learnings: [\"Hardware-software integration\", \"Mobile app development\", \"Assistive technology design\"],\n      featured: false,\n      completionDate: \"2024-11\",\n      skills: [\"IoT Development\", \"Mobile Development\", \"Hardware Integration\", \"Accessibility Design\"]\n    },\n    {\n      id: 5,\n      title: \"Twitter Trend Analyzer\",\n      description: \"AI-powered application providing real-time summaries of trending Twitter topics\",\n      longDescription: \"A sophisticated web application that leverages AI to analyze Twitter trends and provide intelligent summaries. Uses OpenAI's API to process trending topics and generate meaningful insights about social media conversations and public sentiment.\",\n      technologies: [\"React\", \"OpenAI API\", \"Twitter API\", \"Axios\", \"Node.js\"],\n      image: `${import.meta.env.BASE_URL}projects/twitter-trend-app.png`,\n      github: \"https://github.com/Jsackitey1/twitter-summary-app.git\",\n      tags: [\"web\", \"ai\", \"api\", \"social-media\"],\n      category: \"secondary\",\n      status: \"completed\",\n      duration: \"2 weeks\",\n      teamSize: 1,\n      impact: \"Helps users stay informed about social media trends and public opinion\",\n      challenges: [\"API rate limiting\", \"Real-time data processing\", \"AI prompt optimization\"],\n      solutions: [\"Implemented intelligent caching\", \"Created efficient data pipelines\", \"Optimized AI prompts for accuracy\"],\n      learnings: [\"API integration\", \"AI/ML implementation\", \"Social media data analysis\"],\n      featured: false,\n      completionDate: \"2024-10\",\n      skills: [\"API Integration\", \"AI/ML\", \"Data Processing\", \"Social Media Analytics\"]\n    },\n    {\n      id: 6,\n      title: \"Brick Breaker Game\",\n      description: \"Interactive 2D game in Java with advanced physics engine and scoring system\",\n      longDescription: \"A classic Brick Breaker game implemented in Java using Swing. Features sophisticated collision detection, particle effects, power-ups, multiple levels, and a comprehensive scoring system with leaderboards and achievements.\",\n      technologies: [\"Java\", \"Swing\", \"AWT\", \"Game Physics\"],\n      image: `${import.meta.env.BASE_URL}projects/brick-breaker.png`,\n      github: \"https://github.com/Jsackitey1/brickBraker.git\",\n      tags: [\"game\", \"java\", \"physics\", \"desktop\"],\n      category: \"secondary\",\n      status: \"completed\",\n      duration: \"3 weeks\",\n      teamSize: 1,\n      impact: \"Educational game development project demonstrating programming fundamentals\",\n      challenges: [\"Collision detection algorithms\", \"Game physics simulation\", \"Performance optimization\"],\n      solutions: [\"Implemented efficient collision detection\", \"Used optimized rendering techniques\", \"Created modular game architecture\"],\n      learnings: [\"Game development fundamentals\", \"Object-oriented design\", \"Performance optimization\"],\n      featured: false,\n      completionDate: \"2025-09\",\n      skills: [\"Game Development\", \"Object-Oriented Programming\", \"Algorithm Design\", \"Performance Optimization\"]\n    },\n    {\n      id: 7,\n      title: \"AgroMesh - Smart Agriculture Platform\",\n      description: \"A modern web platform for smart agriculture, connecting farmers and buyers with real-time crop data and analytics.\",\n      longDescription: \"AgroMesh is an innovative platform designed to empower farmers and agricultural stakeholders by providing real-time crop monitoring, data analytics, and a marketplace for produce. Built with a modern tech stack, AgroMesh streamlines the agricultural supply chain and promotes sustainable farming practices.\",\n      technologies: [\"React\", \"Node.js\", \"Vercel\", \"Modern Web APIs\"],\n      image: `${import.meta.env.BASE_URL}projects/agromesh.png`,\n      liveDemo: \"https://agro-mesh.vercel.app/\",\n      tags: [\"web\", \"agriculture\", \"data\", \"marketplace\"],\n      category: \"featured\",\n      status: \"in-progress\",\n      duration: \"long term\",\n      teamSize: 2,\n      impact: \"Connected farmers and buyers, improved crop data transparency, and promoted sustainable agriculture.\",\n      challenges: [\"Real-time data integration\", \"User-friendly dashboard design\", \"Scalable marketplace architecture\"],\n      solutions: [\"Used modern web APIs for real-time updates\", \"Designed intuitive UI for all stakeholders\", \"Implemented scalable backend for marketplace transactions\"],\n      learnings: [\"AgriTech domain knowledge\", \"Full-stack web development\", \"User-centric design\"],\n      featured: true,\n      completionDate: \"2025-03\",\n      skills: [\"Full-Stack Development\", \"API Integration\", \"UI/UX Design\", \"AgriTech\"]\n    }\n  ];\n\n  const categories = [\n    { id: 'all', label: 'All Projects', count: projects.length },\n    { id: 'featured', label: 'Featured', count: projects.filter(p => p.category === 'featured').length },\n    { id: 'hackathon', label: 'Hackathons', count: projects.filter(p => p.category === 'hackathon').length },\n    { id: 'secondary', label: 'Personal', count: projects.filter(p => p.category === 'secondary').length }\n  ];\n\n  const statusOptions = [\n    { id: 'all', label: 'All Status' },\n    { id: 'completed', label: 'Completed' },\n    { id: 'in-progress', label: 'In Progress' },\n    { id: 'planning', label: 'Planning' }\n  ];\n\n  const filteredProjects = useMemo(() => {\n    let filtered = projects;\n\n    // Filter by category\n    if (selectedCategory !== 'all') {\n      filtered = filtered.filter(project => project.category === selectedCategory);\n    }\n\n    // Filter by status\n    if (selectedStatus !== 'all') {\n      filtered = filtered.filter(project => project.status === selectedStatus);\n    }\n\n    // Filter by search query\n    if (searchQuery) {\n      filtered = filtered.filter(project =>\n        project.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        project.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        project.technologies.some(tech => tech.toLowerCase().includes(searchQuery.toLowerCase())) ||\n        project.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))\n      );\n    }\n\n    // Sort projects\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'featured':\n          if (a.featured && !b.featured) return -1;\n          if (!a.featured && b.featured) return 1;\n          return new Date(b.completionDate).getTime() - new Date(a.completionDate).getTime();\n        case 'newest':\n          return new Date(b.completionDate).getTime() - new Date(a.completionDate).getTime();\n        case 'duration': {\n          const getDurationDays = (duration: string) => {\n            if (duration.includes('day')) return parseInt(duration);\n            if (duration.includes('week')) return parseInt(duration) * 7;\n            return 30; // default for months\n          };\n          return getDurationDays(b.duration) - getDurationDays(a.duration);\n        }\n        default:\n          return 0;\n      }\n    });\n\n    return filtered;\n  }, [selectedCategory, selectedStatus, searchQuery, sortBy]);\n\n  const stats = {\n    total: projects.length,\n    featured: projects.filter(p => p.featured).length,\n    completed: projects.filter(p => p.status === 'completed').length,\n    technologies: [...new Set(projects.flatMap(p => p.technologies))].length\n  };\n\n  return (\n    <div className=\"enhanced-projects-container\" id=\"projects-section\">\n      <motion.div\n        initial={{ opacity: 0, y: 30 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"projects-header\"\n      >\n        <h2 className=\"section-title\">Projects</h2>\n        <p className=\"section-subtitle\">\n          Innovative solutions built with passion, creativity, and a dash of retro charm.\n        </p>\n      </motion.div>\n\n      <div className=\"projects-window window95-window\">\n        <div className=\"window95-titlebar\">\n          <span>PROJECTS.MGR</span>\n          <div className=\"window95-controls\" aria-hidden=\"true\">\n            <span className=\"window95-control\">_</span>\n            <span className=\"window95-control\">□</span>\n            <span className=\"window95-control\">×</span>\n          </div>\n        </div>\n\n        <div className=\"window95-body\">\n          <div className=\"projects-stats\">\n            <div className=\"stat-item\">\n              <span className=\"stat-number\">{stats.total}</span>\n              <span className=\"stat-label\">Projects</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-number\">{stats.featured}</span>\n              <span className=\"stat-label\">Featured</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-number\">{stats.completed}</span>\n              <span className=\"stat-label\">Completed</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-number\">{stats.technologies}+</span>\n              <span className=\"stat-label\">Technologies</span>\n            </div>\n          </div>\n\n          <div className=\"projects-controls\">\n        <div className=\"search-section\">\n          <div className=\"search-bar\">\n            <input\n              type=\"text\"\n              placeholder=\"Search projects, technologies, or tags...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"search-input\"\n            />\n            <span className=\"search-icon\">🔍</span>\n          </div>\n        </div>\n\n        <div className=\"filter-section\">\n          <div className=\"filter-group\">\n            <label className=\"filter-label\">Category:</label>\n            <div className=\"filter-buttons\">\n              {categories.map(category => (\n                <button\n                  key={category.id}\n                  className={`filter-btn ${selectedCategory === category.id ? 'active' : ''}`}\n                  onClick={() => setSelectedCategory(category.id)}\n                >\n                  {category.label} ({category.count})\n                </button>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"filter-group\">\n            <label className=\"filter-label\">Status:</label>\n            <select\n              value={selectedStatus}\n              onChange={(e) => setSelectedStatus(e.target.value)}\n              className=\"filter-select\"\n            >\n              {statusOptions.map(status => (\n                <option key={status.id} value={status.id}>\n                  {status.label}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"filter-group\">\n            <label className=\"filter-label\">Sort by:</label>\n            <select\n              value={sortBy}\n              onChange={(e) =>\n                setSortBy(e.target.value as 'newest' | 'featured' | 'duration')\n              }\n              className=\"filter-select\"\n            >\n              <option value=\"featured\">Featured First</option>\n              <option value=\"newest\">Newest First</option>\n              <option value=\"duration\">Duration</option>\n            </select>\n          </div>\n\n          <div className=\"view-toggle\">\n            <button\n              className={`view-btn ${viewMode === 'grid' ? 'active' : ''}`}\n              onClick={() => setViewMode('grid')}\n              aria-label=\"Grid view\"\n            >\n              ⊞\n            </button>\n            <button\n              className={`view-btn ${viewMode === 'list' ? 'active' : ''}`}\n              onClick={() => setViewMode('list')}\n              aria-label=\"List view\"\n            >\n              ☰\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <motion.div\n        className={`projects-grid ${viewMode}`}\n        layout\n      >\n        <AnimatePresence mode=\"wait\">\n          {filteredProjects.map((project) => (\n            <Suspense key={project.id} fallback={<Loading size=\"medium\" />}>\n              <EnhancedProjectCard\n                project={project}\n                viewMode={viewMode}\n              />\n            </Suspense>\n          ))}\n        </AnimatePresence>\n      </motion.div>\n\n      {filteredProjects.length === 0 && (\n        <motion.div\n          className=\"no-results\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n        >\n          <h3>No projects found</h3>\n          <p>Try adjusting your search or filter criteria.</p>\n        </motion.div>\n      )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedProjects;"],"file":"assets/EnhancedProjects-Dfs0H0Uj.js"}