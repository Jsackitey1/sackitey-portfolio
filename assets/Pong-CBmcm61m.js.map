{"version":3,"file":"Pong-CBmcm61m.js","sources":["../../src/components/Pong.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './Pong.css';\n\ninterface GameState {\n  ballX: number;\n  ballY: number;\n  ballDX: number;\n  ballDY: number;\n  playerY: number;\n  computerY: number;\n  playerScore: number;\n  computerScore: number;\n  gameRunning: boolean;\n  gameSpeed: number;\n}\n\nconst Pong: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const gameRef = useRef<number | undefined>(undefined);\n  \n  const [gameState, setGameState] = useState<GameState>({\n    ballX: 400,\n    ballY: 200,\n    ballDX: 4,\n    ballDY: 4,\n    playerY: 150,\n    computerY: 150,\n    playerScore: 0,\n    computerScore: 0,\n    gameRunning: false,\n    gameSpeed: 1\n  });\n\n  const canvasWidth = 800;\n  const canvasHeight = 400;\n  const paddleHeight = 80;\n  const paddleWidth = 15;\n  const ballSize = 10;\n\n  // Game loop\n  const gameLoop = useCallback(() => {\n    if (!gameState.gameRunning) return;\n\n    setGameState(prev => {\n      let newState = { ...prev };\n\n      // Move ball\n      newState.ballX += newState.ballDX * newState.gameSpeed;\n      newState.ballY += newState.ballDY * newState.gameSpeed;\n\n      // Ball collision with top and bottom walls\n      if (newState.ballY <= 0 || newState.ballY >= canvasHeight - ballSize) {\n        newState.ballDY = -newState.ballDY;\n      }\n\n      // Ball collision with paddles\n      // Player paddle\n      if (newState.ballX <= paddleWidth && \n          newState.ballY >= newState.playerY && \n          newState.ballY <= newState.playerY + paddleHeight &&\n          newState.ballDX < 0) {\n        newState.ballDX = -newState.ballDX;\n        newState.gameSpeed = Math.min(newState.gameSpeed + 0.1, 2);\n      }\n\n      // Computer paddle\n      if (newState.ballX >= canvasWidth - paddleWidth - ballSize && \n          newState.ballY >= newState.computerY && \n          newState.ballY <= newState.computerY + paddleHeight &&\n          newState.ballDX > 0) {\n        newState.ballDX = -newState.ballDX;\n        newState.gameSpeed = Math.min(newState.gameSpeed + 0.1, 2);\n      }\n\n      // Scoring\n      if (newState.ballX < 0) {\n        newState.computerScore++;\n        newState.ballX = canvasWidth / 2;\n        newState.ballY = canvasHeight / 2;\n        newState.ballDX = 4 * (Math.random() > 0.5 ? 1 : -1);\n        newState.ballDY = 4 * (Math.random() > 0.5 ? 1 : -1);\n        newState.gameSpeed = 1;\n      }\n\n      if (newState.ballX > canvasWidth) {\n        newState.playerScore++;\n        newState.ballX = canvasWidth / 2;\n        newState.ballY = canvasHeight / 2;\n        newState.ballDX = 4 * (Math.random() > 0.5 ? 1 : -1);\n        newState.ballDY = 4 * (Math.random() > 0.5 ? 1 : -1);\n        newState.gameSpeed = 1;\n      }\n\n      // Simple AI for computer paddle\n      const computerCenter = newState.computerY + paddleHeight / 2;\n      const ballCenter = newState.ballY + ballSize / 2;\n      \n      if (computerCenter < ballCenter - 10) {\n        newState.computerY += 3;\n      } else if (computerCenter > ballCenter + 10) {\n        newState.computerY -= 3;\n      }\n\n      // Keep computer paddle in bounds\n      newState.computerY = Math.max(0, Math.min(canvasHeight - paddleHeight, newState.computerY));\n\n      return newState;\n    });\n\n    gameRef.current = requestAnimationFrame(gameLoop);\n  }, [gameState.gameRunning]);\n\n  // Start game loop\n  useEffect(() => {\n    if (gameState.gameRunning) {\n      gameRef.current = requestAnimationFrame(gameLoop);\n    } else {\n      if (gameRef.current) {\n        cancelAnimationFrame(gameRef.current);\n      }\n    }\n\n    return () => {\n      if (gameRef.current) {\n        cancelAnimationFrame(gameRef.current);\n      }\n    };\n  }, [gameState.gameRunning, gameLoop]);\n\n  // Handle keyboard input\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      setGameState(prev => {\n        const newState = { ...prev };\n        \n        switch (e.key.toLowerCase()) {\n          case 'w':\n          case 'arrowup':\n            newState.playerY = Math.max(0, newState.playerY - 20);\n            break;\n          case 's':\n          case 'arrowdown':\n            newState.playerY = Math.min(canvasHeight - paddleHeight, newState.playerY + 20);\n            break;\n          case ' ':\n            newState.gameRunning = !newState.gameRunning;\n            break;\n        }\n        \n        return newState;\n      });\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, []);\n\n  // Draw game\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw center line\n    ctx.strokeStyle = '#ffffff';\n    ctx.setLineDash([5, 5]);\n    ctx.beginPath();\n    ctx.moveTo(canvasWidth / 2, 0);\n    ctx.lineTo(canvasWidth / 2, canvasHeight);\n    ctx.stroke();\n    ctx.setLineDash([]);\n\n    // Draw paddles\n    ctx.fillStyle = '#ffffff';\n    ctx.fillRect(0, gameState.playerY, paddleWidth, paddleHeight);\n    ctx.fillRect(canvasWidth - paddleWidth, gameState.computerY, paddleWidth, paddleHeight);\n\n    // Draw ball\n    ctx.fillStyle = '#ffffff';\n    ctx.fillRect(gameState.ballX, gameState.ballY, ballSize, ballSize);\n\n    // Draw scores\n    ctx.fillStyle = '#ffffff';\n    ctx.font = '48px monospace';\n    ctx.textAlign = 'center';\n    ctx.fillText(gameState.playerScore.toString(), canvasWidth / 4, 60);\n    ctx.fillText(gameState.computerScore.toString(), 3 * canvasWidth / 4, 60);\n\n    // Draw instructions\n    if (!gameState.gameRunning) {\n      ctx.font = '24px monospace';\n      ctx.fillText('Press SPACE to start', canvasWidth / 2, canvasHeight / 2);\n    }\n\n    ctx.font = '16px monospace';\n    ctx.fillText('WASD or Arrow Keys to move', canvasWidth / 2, canvasHeight - 20);\n  }, [gameState]);\n\n  const startNewGame = () => {\n    setGameState({\n      ballX: canvasWidth / 2,\n      ballY: canvasHeight / 2,\n      ballDX: 4 * (Math.random() > 0.5 ? 1 : -1),\n      ballDY: 4 * (Math.random() > 0.5 ? 1 : -1),\n      playerY: canvasHeight / 2 - paddleHeight / 2,\n      computerY: canvasHeight / 2 - paddleHeight / 2,\n      playerScore: 0,\n      computerScore: 0,\n      gameRunning: true,\n      gameSpeed: 1\n    });\n  };\n\n  const togglePause = () => {\n    setGameState(prev => ({\n      ...prev,\n      gameRunning: !prev.gameRunning\n    }));\n  };\n\n  return (\n    <div className=\"pong-container\">\n      <div className=\"pong-header\">\n        <h3>Pong</h3>\n        <div className=\"pong-controls\">\n          <button onClick={startNewGame}>New Game</button>\n          <button onClick={togglePause}>\n            {gameState.gameRunning ? 'Pause' : 'Resume'}\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"pong-game\">\n        <canvas\n          ref={canvasRef}\n          width={canvasWidth}\n          height={canvasHeight}\n          className=\"pong-canvas\"\n        />\n      </div>\n      \n      <div className=\"pong-instructions\">\n        <p><strong>Controls:</strong></p>\n        <p>• W/↑ or S/↓ to move paddle</p>\n        <p>• SPACE to start/pause game</p>\n        <p>• First to score wins the round!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Pong;\n"],"names":["Pong","canvasRef","useRef","gameRef","gameState","setGameState","useState","canvasWidth","canvasHeight","paddleHeight","paddleWidth","ballSize","gameLoop","useCallback","prev","newState","computerCenter","ballCenter","useEffect","handleKeyPress","canvas","ctx","startNewGame","togglePause","jsxs","jsx"],"mappings":"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"}